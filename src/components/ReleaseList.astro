---
import { like, Release, ReleaseGenres, db, eq, and, desc } from "astro:db";

type Props = {
    title: string | null;
    selectedGenre: string | null;
    pinkPaw: boolean | null;
    page?: number;
};
const { title, selectedGenre, pinkPaw, page = 1 } = Astro.props;
const conditions = [];

if (title) {
    conditions.push(like(Release.title, `%${title}%`));
}

if (pinkPaw) {
    conditions.push(eq(Release.pinkPaw, true));
}

let query;
if (selectedGenre) {
    conditions.push(eq(ReleaseGenres.genre, selectedGenre));
    query = db
        .select()
        .from(Release)
        .innerJoin(ReleaseGenres, eq(Release.id, ReleaseGenres.releaseId))
        .groupBy(Release.id)
        .limit(100)
        .offset(100 * page)
        .where(and(...conditions))
        .orderBy(desc(Release.published));
} else {
    query = db
        .select()
        .from(Release)
        .limit(100)
        .offset(100 * page)
        .where(and(...conditions))
        .orderBy(desc(Release.published));
}

const releases = await query.then((releasesWithGenres) =>
    releasesWithGenres.map((r) => ("Release" in r ? r.Release : r)),
);
---

<ul
    class="my-5 pb-[50vh] lg:pb-12 grid grid-cols-2 lg:grid-cols-5 gap-4 justify-center"
>
    {
        releases.map((release) => (
            <li
                aria-name={release.title}
                class="relative group aspect-[3/4] shadow-lg hover:shadow-red-900/30"
            >
                <a data-astro-prefetch href={`release/${release.slug}`}>
                    <div class="absolute rounded-xl -z-10 top-0 h-full w-full p-5 animate-pulse bg-gray-600" />
                    <img
                        class="h-full w-full rounded-xl object-cover text-white/0"
                        onerror='this.style.display = "none";this.nextElementSibling.classList.add("!opacity-100")'
                        transition:name={`release-cover-${release.slug}`}
                        transition:animate="slide"
                        src={release.coverSrc}
                        alt={release.title.split(/[-–,]/g).at(0)}
                    />
                    <div
                        class={`absolute rounded-xl top-0 grid place-content-center gap-2 h-full w-full opacity-0 transition-opacity group-hover:opacity-100 text-white text-center p-5 ${release.pinkPaw ? "bg-pink-600/80" : "bg-red-800/80"}`}
                    >
                        <h2
                            class="font-bold"
                            transition:name={`release-title-${release.slug}`}
                        >
                            {release.title.split(/[-–,]/g).at(0)}
                        </h2>
                        <span class="text-sm">
                            {" "}
                            {release.published.toLocaleDateString()}{" "}
                        </span>
                    </div>
                    {release.pinkPaw ? (
                        <div class="absolute animate-bounce-once bg-pink-100 border-2 border-pink-400 rounded-full bottom-0 right-0 p-1 m-2 text-pink-400">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="none"
                                stroke="currentColor"
                                stroke-width="2"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                class="lucide lucide-paw-print"
                            >
                                <circle cx="11" cy="4" r="2" />
                                <circle cx="18" cy="8" r="2" />
                                <circle cx="20" cy="16" r="2" />
                                <path d="M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z" />
                            </svg>
                        </div>
                    ) : null}
                </a>
            </li>
        ))
    }
</ul>
